CREATE TABLE product(
    product_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(50) NOT NULL,
    description VARCHAR(500),
    plant_care VARCHAR(300),
    image VARCHAR(100) NOT NULL,
    pot_color VARCHAR(50),
    stock INT DEFAULT 0 CHECK(stock >= 0),
    category_id INT,
    FOREIGN KEY (category_id) REFERENCES category(category_id)
);

CREATE TABLE category(
    category_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(30) NOT NULL
);

CREATE TABLE roles (
    id INT PRIMARY KEY AUTO_INCREMENT,  
    role_name VARCHAR(50) NOT NULL UNIQUE  
);


CREATE TABLE users (
    id INT PRIMARY KEY AUTO_INCREMENT, 
    name VARCHAR(100) NOT NULL, 
    email VARCHAR(100) NOT NULL UNIQUE,  
    role_id INT,
    FOREIGN KEY (role_id) REFERENCES roles(id) 
);



CREATE TABLE address(
    address_id INT PRIMARY KEY AUTO_INCREMENT,
    country VARCHAR(20) NOT NULL,
    city VARCHAR(20) NOT NULL,
    pin_code INT NOT NULL,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES user(user_id)
);

CREATE TABLE order_table(
    order_id INT PRIMARY KEY AUTO_INCREMENT,
    order_amount DECIMAL(10,2) NOT NULL,
    order_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(20) DEFAULT 'Pending' CHECK(status IN ('Pending', 'Completed', 'Shipped')),
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES user(user_id)
);

CREATE TABLE payment(
    payment_id INT PRIMARY KEY AUTO_INCREMENT,
    payment_method VARCHAR(50) DEFAULT 'Cash on Delivery',
    amount DECIMAL(10,2) NOT NULL,
    order_id INT,
    FOREIGN KEY (order_id) REFERENCES order_table(order_id)
);

CREATE TABLE tracking_detail(
    tracking_id INT PRIMARY KEY AUTO_INCREMENT,
    status VARCHAR(30) CHECK(status IN ('Pending', 'Shipped', 'Delivered')),
    shipped_date DATETIME,
    delivery_date DATETIME,
    order_id INT,
    FOREIGN KEY (order_id) REFERENCES order_table(order_id)
);

CREATE TABLE cart(
    cart_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES user(user_id)
);

CREATE TABLE cart_item(
    cart_item_id INT PRIMARY KEY AUTO_INCREMENT,
    cart_id INT,
    product_id INT,
    quantity INT NOT NULL DEFAULT 0 CHECK(quantity >= 0),
    FOREIGN KEY (cart_id) REFERENCES cart(cart_id),
    FOREIGN KEY (product_id) REFERENCES product(product_id)
);
